{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module-4/mod_4_project/Front-End/src/App.js\";\nimport React, { Component } from \"react\";\nimport Dashboard from './Dashboard';\nimport Login from './Login';\nimport Header from './Header';\nimport socketIOClient from 'socket.io-client';\nimport DrawingBoard from \"./DrawingBoard\";\nconst socket = socketIOClient('http://10.185.2.208:8080');\n\nclass App extends Component {\n  constructor() {\n    console.log(\"constructor\");\n    super();\n\n    this.onButtonPress = (handle, text) => {\n      // debugger\n      socket.emit(\"chat\", {\n        message: text,\n        handle: handle\n      });\n    };\n\n    this.onTyping = handle => {\n      socket.emit('typing', handle);\n    };\n\n    this.login = e => {\n      let username = e.target.parentElement.children[0].value;\n      let password = e.target.parentElement.children[1].value;\n      fetch('http://localhost:8000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      }).then(res => res.json()).then(obj => {\n        if (obj.error) {\n          alert(obj.error);\n        } else {\n          let newUserlist = this.state.userList;\n          newUserlist.push(obj.user);\n          this.setState({\n            user: obj.user,\n            userList: newUserlist\n          });\n        }\n      }).catch(err => {\n        err.json();\n      });\n    };\n\n    this.createUser = e => {\n      let userField = document.getElementById(\"create-username-input\");\n      let passField = document.getElementById(\"create-password-input\");\n      let username = e.target.parentElement.children[0].value;\n      let password = e.target.parentElement.children[1].value;\n      fetch('http://localhost:8000/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      }).then(res => res.json()).then(user => {\n        if (user.error) {\n          alert(user.error);\n        } else {\n          alert('Account created. Please log in to continue.');\n          userField.value = \"\";\n          passField.value = \"\";\n        }\n      });\n    };\n\n    this.state = {\n      displayText: \"\",\n      feedbackText: \"\",\n      user: \"nathan\",\n      userList: []\n    };\n  } // emit events\n\n\n  componentDidMount() {\n    console.log(\"component did mount\"); //listen for events\n\n    socket.on(\"chat\", data => {\n      this.setState({\n        displayText: \"\".concat(data.handle, \": \").concat(data.message),\n        feedbackText: \"\"\n      });\n    });\n    socket.on('typing', data => {\n      this.setState({\n        feedbackText: \"\".concat(data, \" is typing a message\")\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), this.state.user ? React.createElement(DrawingBoard, {\n      user: this.state.user,\n      userlist: this.state.userList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      login: this.login,\n      createUser: this.createUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }) //this.state.user ? <Dashboard user={this.state.user} userlist={this.state.userList}/> : <Login login={this.login} createUser={this.createUser}/>\n    );\n  }\n\n}\n\nexport default App; // }\n//   render(){\n//     console.log(\"render\")\n//   return (\n//   <div>\n//     <input type=\"text\" onChange={(e) => this.showText(e.target.value)}></input>\n//     <div id=\"chat\">\n//       <div id=\"chat-window\">\n//         <div id=\"output\">{this.state.displayText}\n//         </div>\n//         <div id=\"feedback\">{this.state.feedbackText}</div>\n//         <input id=\"handle\" type=\"text\" placeholder=\"Handle\"/>\n//         <input onKeyPress={(event) => this.onTyping(event.target.parentElement.children[2].value)} id=\"message\" type=\"text\" placeholder=\"Message\"/>\n//         <button id=\"send\" onClick={(event) => this.onButtonPress(event.target.parentElement.children[2].value, event.target.parentElement.children[3].value)}>Send</button>\n//       </div>\n//     </div>","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module-4/mod_4_project/Front-End/src/App.js"],"names":["React","Component","Dashboard","Login","Header","socketIOClient","DrawingBoard","socket","App","constructor","console","log","onButtonPress","handle","text","emit","message","onTyping","login","e","username","target","parentElement","children","value","password","fetch","method","headers","body","JSON","stringify","then","res","json","obj","error","alert","newUserlist","state","userList","push","user","setState","catch","err","createUser","userField","document","getElementById","passField","displayText","feedbackText","componentDidMount","on","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Dashboard from './Dashboard';\nimport Login from './Login';\nimport Header from './Header';\nimport socketIOClient from 'socket.io-client'\nimport DrawingBoard from \"./DrawingBoard\";\nconst socket = socketIOClient('http://10.185.2.208:8080')\n\n\n\nclass App extends Component {\n\n  constructor() {\n    console.log(\"constructor\")\n    super()\n    this.state = {\n      displayText: \"\",\n      feedbackText: \"\",\n      user: \"nathan\",\n      userList: []\n    }\n  }\n\n  // emit events\n  onButtonPress = (handle, text) => {\n    // debugger\n    socket.emit(\"chat\", {\n      message: text,\n      handle: handle\n    })\n  }\n\n  onTyping = (handle) => {\n    socket.emit('typing', handle)\n  }\n\n  login = (e) => {\n    let username = e.target.parentElement.children[0].value\n    let password = e.target.parentElement.children[1].value\n    fetch('http://localhost:8000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username, password: password\n      })\n    })\n    .then(res => res.json())\n    .then(obj => {\n      if(obj.error) {\n        alert(obj.error)\n      } else {\n      let newUserlist = this.state.userList\n      newUserlist.push(obj.user)\n      this.setState({\n        user: obj.user,\n        userList: newUserlist\n      })\n    }})\n    .catch(err => {\n      err.json()\n     })\n  }\n\n\n\ncomponentDidMount() {\n  console.log(\"component did mount\")\n\n  //listen for events\n  socket.on(\"chat\", data => {\n    this.setState({\n      displayText: `${data.handle}: ${data.message}`,\n      feedbackText: \"\"\n    })\n  })\n\n  socket.on('typing', data => {\n    this.setState({\n      feedbackText: `${data} is typing a message`\n\n      })\n  })\n}\n\n\n  createUser = (e) => {\n    let userField = document.getElementById(\"create-username-input\")\n    let passField = document.getElementById(\"create-password-input\")\n    let username = e.target.parentElement.children[0].value\n    let password = e.target.parentElement.children[1].value\n    fetch('http://localhost:8000/register',{\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username, password: password\n      })\n    })\n    .then(res => res.json())\n    .then(user => {\n      if(user.error){\n        alert(user.error);\n      } else\n      {alert('Account created. Please log in to continue.')\n      userField.value = \"\";\n      passField.value = \"\"}\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        {\n          this.state.user ? <DrawingBoard user={this.state.user} userlist={this.state.userList}/> : <Login login={this.login} createUser={this.createUser}/>\n          //this.state.user ? <Dashboard user={this.state.user} userlist={this.state.userList}/> : <Login login={this.login} createUser={this.createUser}/>\n        }\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n\n\n\n// }\n\n//   render(){\n//     console.log(\"render\")\n//   return (\n//   <div>\n//     <input type=\"text\" onChange={(e) => this.showText(e.target.value)}></input>\n    \n//     <div id=\"chat\">\n//       <div id=\"chat-window\">\n//         <div id=\"output\">{this.state.displayText}\n//         </div>\n//         <div id=\"feedback\">{this.state.feedbackText}</div>\n//         <input id=\"handle\" type=\"text\" placeholder=\"Handle\"/>\n//         <input onKeyPress={(event) => this.onTyping(event.target.parentElement.children[2].value)} id=\"message\" type=\"text\" placeholder=\"Message\"/>\n//         <button id=\"send\" onClick={(event) => this.onButtonPress(event.target.parentElement.children[2].value, event.target.parentElement.children[3].value)}>Send</button>\n\n//       </div>\n//     </div>"]},"metadata":{},"sourceType":"module"}