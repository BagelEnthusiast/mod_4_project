{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Desktop/code challenges and projects/mod_4_project-1/Front-End/src/App.js\";\nimport React from 'react';\nimport Dashboard from './Dashboard';\nimport Login from './Login';\nimport Header from './Header'; // import socketIO from 'socket.io-client'\n// const io = socketIO('http://10.185.0.210:8080')\n// window.io = io\n//\n// io.on('message', payload => {\n//   console.log(payload)\n// })\n// var socket = io.connect('http://localhost:3003')\n//vidhi lecture code\n// import socketIO from 'socket.io-client'\n//const io =  socketIO('http://10.185.1.7:3003')\n//vidhi ip\n// const io = socketIO('http://10.185.0.210:8080')\n// window.io = io\n//io.emit('random', \"table tennis*\")  test in console\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.login = e => {\n      let newUserList = this.state.userList.push(user);\n      this.setState({\n        user: nul,\n        userList: newUserList\n      });\n    };\n\n    this.fetchUser = username => {\n      fetch('http://localhost:8000/users').then(res => res.json()).then(users => {\n        this.setState({\n          user: users.find(user => {\n            return user.username === username;\n          })\n        });\n      });\n    };\n\n    this.createUser = e => {\n      let username = e.target.parentElement.children[0].value;\n      let password = e.target.parentElement.children[1].value;\n      fetch('http://localhost:8000/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      }).then(res => res.json()).then(user => {\n        let newUserList = this.state.userList.push(user);\n        this.setState({\n          user: user,\n          userList: newUserList\n        });\n      });\n    };\n\n    this.state = {\n      user: null,\n      userList: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), this.state.user ? React.createElement(Dashboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      login: this.login,\n      createUser: this.createUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/flatironstudentaccount/Desktop/code challenges and projects/mod_4_project-1/Front-End/src/App.js"],"names":["React","Dashboard","Login","Header","App","Component","constructor","login","e","newUserList","state","userList","push","user","setState","nul","fetchUser","username","fetch","then","res","json","users","find","createUser","target","parentElement","children","value","password","method","headers","body","JSON","stringify","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAQbC,KARa,GAQJC,CAAD,IAAO;AACb,UAAIC,WAAW,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBC,IAAzB,CAAlB;AACA,WAAKC,QAAL,CAAc;AACZD,QAAAA,IAAI,EAAEE,GADM;AAEZJ,QAAAA,QAAQ,EAAEF;AAFE,OAAd;AAID,KAdY;;AAAA,SAgBbO,SAhBa,GAgBAC,QAAD,IAAc;AACxBC,MAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,KAAK,IAAI;AACb,aAAKR,QAAL,CAAc;AACZD,UAAAA,IAAI,EAAES,KAAK,CAACC,IAAN,CAAWV,IAAI,IAAI;AAAC,mBAAOA,IAAI,CAACI,QAAL,KAAkBA,QAAzB;AAAkC,WAAtD;AADM,SAAd;AAGD,OAND;AAOD,KAxBY;;AAAA,SA0BbO,UA1Ba,GA0BChB,CAAD,IAAO;AAClB,UAAIS,QAAQ,GAAGT,CAAC,CAACiB,MAAF,CAASC,aAAT,CAAuBC,QAAvB,CAAgC,CAAhC,EAAmCC,KAAlD;AACA,UAAIC,QAAQ,GAAGrB,CAAC,CAACiB,MAAF,CAASC,aAAT,CAAuBC,QAAvB,CAAgC,CAAhC,EAAmCC,KAAlD;AACAV,MAAAA,KAAK,CAAC,6BAAD,EAA+B;AAClCY,QAAAA,MAAM,EAAE,MAD0B;AAElCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFyB;AAKlCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBjB,UAAAA,QAAQ,EAAEA,QADS;AACCY,UAAAA,QAAQ,EAAEA;AADX,SAAf;AAL4B,OAA/B,CAAL,CASCV,IATD,CASMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATb,EAUCF,IAVD,CAUMN,IAAI,IAAI;AACZ,YAAIJ,WAAW,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBC,IAAzB,CAAlB;AACA,aAAKC,QAAL,CAAc;AACZD,UAAAA,IAAI,EAAEA,IADM;AAEZF,UAAAA,QAAQ,EAAEF;AAFE,SAAd;AAID,OAhBD;AAiBD,KA9CY;;AAEX,SAAKC,KAAL,GAAa;AACXG,MAAAA,IAAI,EAAE,IADK;AAEXF,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AA0CDwB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGI,KAAKzB,KAAL,CAAWG,IAAX,GAAkB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,GAAkC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKN,KAAnB;AAA0B,MAAA,UAAU,EAAE,KAAKiB,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHtC,CADF;AAQD;;AA1D+B;;AA6DlC,eAAepB,GAAf","sourcesContent":["import React from 'react';\nimport Dashboard from './Dashboard';\nimport Login from './Login';\nimport Header from './Header';\n\n// import socketIO from 'socket.io-client'\n\n// const io = socketIO('http://10.185.0.210:8080')\n// window.io = io\n//\n// io.on('message', payload => {\n//   console.log(payload)\n// })\n\n// var socket = io.connect('http://localhost:3003')\n\n//vidhi lecture code\n// import socketIO from 'socket.io-client'\n//const io =  socketIO('http://10.185.1.7:3003')\n\n//vidhi ip\n// const io = socketIO('http://10.185.0.210:8080')\n// window.io = io\n\n//io.emit('random', \"table tennis*\")  test in console\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      user: null,\n      userList: []\n    }\n  }\n\n  login = (e) => {\n    let newUserList = this.state.userList.push(user)\n    this.setState({\n      user: nul,\n      userList: newUserList\n    })\n  }\n\n  fetchUser = (username) => {\n    fetch('http://localhost:8000/users')\n    .then(res => res.json())\n    .then(users => {\n      this.setState({\n        user: users.find(user => {return user.username === username})\n      })\n    })\n  }\n\n  createUser = (e) => {\n    let username = e.target.parentElement.children[0].value\n    let password = e.target.parentElement.children[1].value\n    fetch('http://localhost:8000/users',{\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username, password: password\n      })\n    })\n    .then(res => res.json())\n    .then(user => {\n      let newUserList = this.state.userList.push(user)\n      this.setState({\n        user: user,\n        userList: newUserList\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        {\n          this.state.user ? <Dashboard /> : <Login login={this.login} createUser={this.createUser}/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}